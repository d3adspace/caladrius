plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
}

group = 'de.d3adspace'
version = '2.0.0'

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation 'com.google.flogger:flogger:0.6'
  implementation 'com.google.flogger:flogger-system-backend:0.6'
  implementation 'com.google.guava:guava:30.1.1-jre'
  implementation 'org.yaml:snakeyaml:1.28'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
  useJUnitPlatform()
}


publishing {
  repositories {
    maven {
      name = "GitHubPackages"
      url = uri("https://maven.pkg.github.com/d3adspace/caladrius")
      credentials {
        username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
        password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
      }
    }
  }
  publications {
    gpr(MavenPublication) {
      from components.java
    }
  }
}

signing {
  useInMemoryPgpKeys(
    findProperty("GPG_KEY") as String,
    findProperty("GPG_KEY_PASSPHRASE") as String
  )
  sign publishing.publications.gpr
}

java {
  withJavadocJar()
  withSourcesJar()
}

jar {
  exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
  configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
}
